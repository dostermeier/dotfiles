#!/bin/sh

REGISTER_HOST=false;
DISTRIB_HOSTS="$HOME/.distrib_hosts";
ACTION_CHECK_DNS=false;

usage()
{
    cat << EOF
    usage: $0 options <host>

    This script distributes ~/.dotfiles to a specified host before
    triggering a bootstrap.

    OPTIONS:
       -h | --help      Show this message
       --check-dns      Execute a DNS check of the host.
       -r | --register  Register the host in the .distrib_hosts file.
EOF
}

while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | sed 's/^[^=]*=//g'`
    case $PARAM in
        -h | -? | --help)
            usage
            exit
            ;;
        --check-dns)
            ACTION_CHECK_DNS=true;
            ;;
        -r | --register)
            REGISTER_HOST=true;
            ;;
        -* | --*)
            echo "ERROR: unknown parameter \"$PARAM\""
            usage
            exit 1
            ;;
        *)
            break
            ;;
    esac;
    shift;
done;

HOST=$1
if [ -z $HOST ]; then
    echo "Required argument <host> was not specified.";
    usage
    exit
fi

SSH="/usr/bin/ssh -x"
RSYNC="/usr/bin/rsync"

if [ ${DEBUG:-0} -gt 0 ]; then
    RSYNC_OPTS='-v'
fi

# If Host DNS check is requested 
if [ "$ACTION_CHECK_DNS" == "true" ]; then
    host "$HOST" &> /dev/null 
    rc=$?;
    if [ "$rc" -ne "0" ]; then
        echo "Invalid host: $HOST";
        exit 1;
    fi
fi

if [ "$REGISTER_HOST" == "true" ]; then
    # If the host is not already in the ~/.distrib_hosts file, add it.
    if [ ! -f "$DISTRIB_HOSTS" ]; then
        touch "$DISTRIB_HOSTS";
    fi;

    grep "^$HOST$" "$DISTRIB_HOSTS" &> /dev/null
    rc=$?;
    if [ "$rc" -ne "0" ]; then
        cp "$DISTRIB_HOSTS" /tmp/distrib_hosts.$$
        echo $HOST >> /tmp/distrib_hosts.$$
        sort -u /tmp/distrib_hosts.$$ > "$DISTRIB_HOSTS"
        rm /tmp/distrib_hosts.$$
        host_count=`cat "$DISTRIB_HOSTS" | wc -l | tr -d ' '`;
        echo " => Added to ~/.distrib_hosts (now $host_count hosts)"
    fi;
fi;

## Rsync for dotfiles
$RSYNC $RSYNC_OPTS -a --delete --exclude=.git --exclude=.gitignore ~/.dotfiles -e ssh $HOST:~
echo " => Sync of dotfiles complete, running bootstrap.";
$SSH $HOST "cd ~/.dotfiles; script/bootstrap -O";
rc=$?;

if [ "$rc" -ne "0" ]; then
    echo " => dotfile bootstrap failed.";
    exit 1;
else
    echo " => dotfiles bootstrapped.";
fi

## Vim Configs
echo " => Sync vim setup."
$RSYNC $RSYNC_OPTS -a --exclude=.git --exclude=.gitignore --delete -e ssh ~/.vim $HOST:~
echo " => Vim setup completed."
echo "DONE.";
exit 0;
